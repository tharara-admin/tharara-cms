name: Deploy Tharara CMS
on:
  push:
    branches:
      - test
jobs:
  deploy:
    environment: test
    runs-on: ubuntu-latest
    permissions:
      contents: read
    #   secrets: read
    steps:
      - uses: actions/checkout@v4
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18"
      - name: Install dependencies
        run: npm install
      - name: Build
        run: npm run build
      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_CREDENTIALS }}
      - name: Set up Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v2
      - name: Build and Push Docker Image
        run: |
          echo "Project ID: ${{ secrets.GCP_PROJECT_ID }}"
          gcloud auth configure-docker asia-south1-docker.pkg.dev
          echo "Authentication configured for asia-south1"
          docker build -t asia-south1-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/tharara-cms/tharara-cms:latest .
          echo "Image built, pushing to registry..."
          docker push asia-south1-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/tharara-cms/tharara-cms:latest
          echo "Push completed"
      - name: Deploy to Cloud Run
        run: |
          gcloud run deploy tharara-cms-test \
            --image asia-south1-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/tharara-cms/tharara-cms:latest \
            --region asia-south1 \
            --platform managed \
            --allow-unauthenticated \
            --timeout 900 \
            --memory 1Gi \
            --cpu 1 \
            --add-cloudsql-instances=tharara-project:asia-south1:tharara-test-db \
            --set-env-vars "DATABASE_CLIENT=postgres" \
            --set-env-vars "DATABASE_URL=${{ secrets.TEST_DATABASE_URL }}" \
            --set-env-vars "GCS_BUCKET=${{ secrets.TEST_GCS_BUCKET }}" \
            --set-env-vars "APP_KEYS=${{ secrets.STRAPI_APP_KEYS }}" \
            --set-env-vars "API_TOKEN_SALT=${{ secrets.STRAPI_API_TOKEN_SALT }}" \
            --set-env-vars "ADMIN_JWT_SECRET=${{ secrets.STRAPI_ADMIN_JWT_SECRET }}" \
            --set-env-vars "JWT_SECRET=${{ secrets.STRAPI_JWT_SECRET }}" \
            --set-env-vars "NODE_ENV=test"
