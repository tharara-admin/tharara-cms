steps:
  # Build the container image
  - name: "gcr.io/cloud-builders/docker"
    args:
      [
        "build",
        "-t",
        "asia-south1-docker.pkg.dev/$PROJECT_ID/tharara-cms/cms:$COMMIT_SHA",
        "-t",
        "asia-south1-docker.pkg.dev/$PROJECT_ID/tharara-cms/cms:latest",
        ".",
      ]

  # Push the container image to your existing tharara-cms Artifact Registry
  - name: "gcr.io/cloud-builders/docker"
    args:
      [
        "push",
        "asia-south1-docker.pkg.dev/$PROJECT_ID/tharara-cms/cms:$COMMIT_SHA",
      ]

  - name: "gcr.io/cloud-builders/docker"
    args:
      ["push", "asia-south1-docker.pkg.dev/$PROJECT_ID/tharara-cms/cms:latest"]

  # Deploy to Cloud Run
  - name: "gcr.io/google.com/cloudsdktool/cloud-sdk"
    entrypoint: gcloud
    args:
      [
        "run",
        "deploy",
        "tharara-cms",
        "--image",
        "asia-south1-docker.pkg.dev/$PROJECT_ID/tharara-cms/cms:$COMMIT_SHA",
        "--region",
        "asia-south1",
        "--platform",
        "managed",
        "--allow-unauthenticated",
        "--port",
        "1337",
        "--memory",
        "1Gi",
        "--cpu",
        "1",
        "--set-env-vars",
        "NODE_ENV=production,HOST=0.0.0.0,PORT=1337",
        "--set-cloudsql-instances",
        "$PROJECT_ID:asia-south1:tharara-cms-db",
        "--max-instances",
        "10",
        "--min-instances",
        "1",
      ]

options:
  logging: CLOUD_LOGGING_ONLY
  machineType: "E2_HIGHCPU_8"
