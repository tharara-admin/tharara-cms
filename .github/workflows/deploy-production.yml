name: Deploy Tharara CMS

on:
  push:
    branches:
      - production

jobs:
  deploy:
    environment: production
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write

    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18"

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Set up Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v2

      - name: Build and Push Docker Image
        run: |
          echo "Configuring Docker authentication..."
          gcloud auth configure-docker asia-south1-docker.pkg.dev

          echo "Building Docker image..."
          docker build -t asia-south1-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/tharara-cms/tharara-cms:${{ github.sha }} .
          docker tag asia-south1-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/tharara-cms/tharara-cms:${{ github.sha }} asia-south1-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/tharara-cms/tharara-cms:latest

          echo "Pushing Docker image..."
          docker push asia-south1-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/tharara-cms/tharara-cms:${{ github.sha }}
          docker push asia-south1-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/tharara-cms/tharara-cms:latest

      - name: Deploy to Cloud Run
        run: |
          gcloud run deploy tharara-cms \
            --image asia-south1-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/tharara-cms/tharara-cms:${{ github.sha }} \
            --region asia-south1 \
            --platform managed \
            --allow-unauthenticated \
            --port 8080 \
            --timeout 900 \
            --memory 2Gi \
            --cpu 2 \
            --add-cloudsql-instances=tharara-project:asia-south1:tharara-cms-db \
            --set-env-vars "HOST=0.0.0.0" \
            --set-env-vars "NODE_ENV=production" \
            --set-env-vars "DATABASE_CLIENT=postgres" \
            --set-env-vars "DATABASE_URL=${{ secrets.DATABASE_URL }}" \
            --set-env-vars "GCS_BUCKET=${{ secrets.TEST_GCS_BUCKET }}" \
            --set-env-vars "APP_KEYS=${{ secrets.STRAPI_APP_KEYS }}" \
            --set-env-vars "API_TOKEN_SALT=${{ secrets.STRAPI_API_TOKEN_SALT }}" \
            --set-env-vars "ADMIN_JWT_SECRET=${{ secrets.STRAPI_ADMIN_JWT_SECRET }}" \
            --set-env-vars "JWT_SECRET=${{ secrets.STRAPI_JWT_SECRET }}"

      - name: Verify Deployment
        run: |
          echo "Deployment completed!"
          SERVICE_URL=$(gcloud run services describe tharara-cms --region asia-south1 --format 'value(status.url)')
          echo "Service URL: $SERVICE_URL"
          echo "Testing health endpoint..."
          curl -f "$SERVICE_URL/health" || echo "Health check failed - service may still be starting"
